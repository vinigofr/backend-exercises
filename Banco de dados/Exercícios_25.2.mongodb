// Exercício 1 : Utilize uma combinação das expressões aritméticas e adicione um campo chamado idade à coleção clientes. Algumas dicas:
// arredonde para baixo o valor da idade;
use('erp');
db.clientes.find();

use('erp');
const milissegundos = 1000 * 60 * 60 * 24 * 365;
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
        $divide: [{ $subtract: ["$$NOW", "$dataNascimento"] }, milissegundos]
      }
      }
    }
  },
  {
    $project: {
      _id: 0,
      nome: 1,
      idade: 1,
    }
  }
]);

// Exercício 2 : Utilizando o novo campo idade, conte quantos clientes têm entre 18 e 25 anos.

use('erp');
const milissegundos = 1000 * 60 * 60 * 24 * 365;
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
        $divide: [{ $subtract: ["$$NOW", "$dataNascimento"] }, milissegundos]
      }
      }
    }
  },
  {
    $match: {
      idade: {
        $gte: 18, $lte: 25
      }
    }
  },
  {
    $project: {
      _id: 0,
      nome: 1,
      idade: 1,
    }
  },
  {
    $count: "quantidade"
  }
]);

// Exercício 3 : Remova os estágios $count e $match do exercício anterior e adicione um estágio no pipeline que coloque as compras do cliente no campo compras.
use('erp');
const milissegundos = 1000 * 60 * 60 * 24 * 365;
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
        $divide: [{ $subtract: ["$$NOW", "$dataNascimento"] }, milissegundos]
      }
      }
    }
  },
  {
    $project: {
      _id: 0,
      nome: 1,
      idade: 1,
    }
  }
]);

// Exercício 4 : Selecione TODOS os clientes que compraram entre Junho de 2019 e Março de 2020.
// Exercício 5 : Confira o número de documentos retornados pelo pipeline com o método itcount(). Até aqui, você deve ter 486 documentos sendo retornados.
// Exercício 6 : Ainda nesse pipeline, descubra os 5 estados com mais compras.
// Exercício 7 : Descubra o cliente que mais consumiu QUEIJO PRATO. Retorne um documento com a seguinte estrutura:
{
  "nomeCliente": "NOME",
  "uf": "UF DO CLIENTE",
  "totalConsumido": 100
}
// Exercício 8 : Selecione todas as vendas do mês de Março de 2020, com status EM SEPARACAO. Acrescente um campo chamado dataEntregaPrevista com valor igual a três dias após a data da venda. Retorne apenas os campos clienteId, dataVenda e dataEntregaPrevista.